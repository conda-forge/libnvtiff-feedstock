{% set name = "libnvtiff" %}
{% set version = "0.5.1.75" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-sbsa" %}  # [aarch64 and arm_variant_type=="sbsa"]
{% set platform = "linux-aarch64" %}  # [aarch64 and arm_variant_type=="tegra"]
{% set platform = "windows-x86_64" %}  # [win64]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: libnvtiff-split
  version: {{ version }}

{% set arm_variant_type = arm_variant_type | default("sbsa") %}
{% set cuda_compiler_version = cuda_compiler_version | default("None") %}
{% set cuda_major = environ.get("cuda_compiler_version", "13.0").split(".")[0] %}

{% set sha256 = "1f97778f92c938f5174fda74a913370d4ff200d77809570cecdafcd8aaff84b6" %}  # [linux64 and (cuda_compiler_version or "").startswith("12")]
{% set sha256 = "5d63be4128daf28676ae01a81d2e69f828d2e7eda332c039079ff57b42915d20" %}  # [linux64 and (cuda_compiler_version or "").startswith("13")]
{% set sha256 = "d20309617df0bca6b373dfa33bac99703993a0e3759af70d2691d3b829df4d33" %}  # [aarch64 and (cuda_compiler_version or "").startswith("12") and arm_variant_type == "sbsa"]
{% set sha256 = "415c507443c026db501bd58d49428d6378f7d5e02e371f8f05d9cbe421565a90" %}  # [aarch64 and (cuda_compiler_version or "").startswith("13") and arm_variant_type == "sbsa"]
{% set sha256 = "7d37821154aca7846695ccf12369eeb8c0f263d58b6dfb43e23bd12f4c114ef0" %}  # [aarch64 and (cuda_compiler_version or "").startswith("12") and arm_variant_type == "tegra"]
{% set sha256 = "8d1b07af6d8b68776d6a6533b4c33134af01d5cb6a0d9c5bcc7a866559de600a" %}  # [aarch64 and (cuda_compiler_version or "").startswith("13") and arm_variant_type == "tegra"]
{% set sha256 = "a3db5d37c61845d97aa5f1c1a93f9885239741c169a4c577f1f93293dd139a0d" %}  # [win64 and (cuda_compiler_version or "").startswith("12")]
{% set sha256 = "0e75603c23eed4df4d04d8ddd08bc106df9a4423596f32d238fbf7bb623280b1" %}  # [win64 and (cuda_compiler_version or "").startswith("13")]

source:
  - url: https://developer.download.nvidia.com/compute/nvtiff/redist/libnvtiff/{{ platform }}/libnvtiff-{{ platform }}-{{ version }}_cuda{{ cuda_major }}-archive.{{ extension }}
    sha256: {{ sha256 }}

build:
  number: 0
  skip: true  # [osx or ppc64le or cuda_compiler_version in (None, "None")]

requirements:
  build:
    - cf-nvidia-tools 1.*  # [linux]

outputs:

  - name: libnvtiff{{ version.split(".")[0] }}
    build:
      ignore_run_exports:
        - cuda-version
    files:
      - lib/libnvtiff.so.*            # [linux]
      - Library\bin\nvtiff*.dll       # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cuda") }}
        - {{ stdlib("c") }}
      host:
        - cuda-version {{ cuda_compiler_version }}
      run:
        - {{ pin_compatible('cuda-version', max_pin='x', min_pin='x') }}
    test:
      commands:
        - test -L $PREFIX/lib/libnvtiff.so.{{ version.split(".")[0] }}                            # [linux]
        - test -f $PREFIX/lib/libnvtiff.so.{{ version }}                                          # [linux]
        - if not exist %LIBRARY_BIN%\nvtiff_{{ version.split(".")[0] }}.dll exit 1              # [win]
    about:
      summary: The NVIDIA nvTIFF runtime library.
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      description: >-
        This is a runtime package only. Developers should install libnvtiff-dev to build
        with nvTIFF.

  - name: libnvtiff
    requirements:
      run:
        # FIXME: Pin to patch version until 1.0
        - {{ pin_subpackage("libnvtiff" ~ version.split(".")[0], max_pin="x.x.x") }}
    about:
      summary: The NVIDIA nvTIFF runtime library.
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      description: >-
        This is a runtime package only. Developers should install libnvtiff-dev to build
        with nvTIFF.

  - name: libnvtiff-dev
    build:
      run_exports:
        # FIXME: Pin to patch version until 1.0
        - {{ pin_subpackage("libnvtiff" ~ version.split(".")[0], max_pin="x.x.x") }}
        - {{ pin_subpackage("libnvtiff", max_pin="x.x.x") }}
    files:
      - lib/libnvtiff.so                                  # [linux]
      # - lib/pkgconfig/nvtiff*.pc                          # [linux]
      - include/nvtiff*                                   # [linux]
      - Library\include                                   # [win]
      - Library\lib\nvtiff.lib                            # [win]
    requirements:
      host:
        - cuda-version {{ cuda_compiler_version }}
        - {{ pin_subpackage("libnvtiff" ~ version.split(".")[0], exact=True) }}
        - {{ pin_subpackage("libnvtiff", max_pin="x.x.x") }}
      run:
        - {{ pin_subpackage("libnvtiff" ~ version.split(".")[0], exact=True) }}
        - {{ pin_subpackage("libnvtiff", max_pin="x.x.x") }}
    test:
      commands:
        - test -L $PREFIX/lib/libnvtiff.so                                    # [linux]
        # - test -f $PREFIX/lib/pkgconfig/nvtiff*.pc                            # [linux]
        - test -f $PREFIX/include/nvtiff_version.h                            # [linux]
        - test -f $PREFIX/include/nvtiff.h                                    # [linux]
        - if not exist %LIBRARY_INC%\nvtiff_version.h exit 1                  # [win]
        - if not exist %LIBRARY_INC%\nvtiff.h exit 1                          # [win]
        - if not exist %LIBRARY_LIB%\nvtiff.lib exit 1                        # [win]

  - name: libnvtiff-static
    build:
      skip: True  # [not linux]
    files:
      - lib/libnvtiff_static.a  # [linux]
    requirements:
      host:
        - cuda-version {{ cuda_compiler_version }}
      run:
        - {{ pin_subpackage("libnvtiff-dev", exact=True) }}
    test:
      commands:
        - test -f $PREFIX/lib/libnvtiff_static.a  # [linux]
    about:
      summary: The NVIDIA nvTIFF static library.
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      description: >-
        This is a developer package only. Developers should install this package to link
        statically to nvTIFF.

about:
  home: https://docs.nvidia.com/cuda/nvtiff/
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: The NVIDIA nvTIFF development package.
  description: >-
    nvTIFF is a GPU accelerated TIFF(Tagged Image File Format) encode/decode library built
    on the CUDA platform. The library is supported on Volta+ GPU architectures.
  doc_url: https://docs.nvidia.com/cuda/nvtiff/

extra:
  recipe-maintainers:
    - conda-forge/cuda
